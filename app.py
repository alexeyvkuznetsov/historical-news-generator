# app.py
import streamlit as st # Streamlit –∏–º–ø–æ—Ä—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–¥–Ω–∏–º –∏–∑ –ø–µ—Ä–≤—ã—Ö
import datetime
import sys
import os
import importlib.metadata # –î–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏

# --- –ü–ï–†–ï–ú–ï–©–ê–ï–ú set_page_config –°–Æ–î–ê ---
# –≠—Ç–æ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ü–ï–†–í–ê–Ø –∫–æ–º–∞–Ω–¥–∞ Streamlit –≤ —Å–∫—Ä–∏–ø—Ç–µ
st.set_page_config(page_title="–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –í–µ—Å—Ç–Ω–∏–∫–™", layout="wide")
# --- –ö–û–ù–ï–¶ –ü–ï–†–ï–ú–ï–©–ï–ù–ò–Ø ---


# --- –ë–õ–û–ö –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò –í–ï–†–°–ò–ô (—Ç–µ–ø–µ—Ä—å –∏–¥–µ—Ç –ü–û–°–õ–ï set_page_config) ---
st.write("--- –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å—Ä–µ–¥—ã ---")
try:
    st.write(f"–í–µ—Ä—Å–∏—è Python: {sys.version}")
    st.write(f"–ü—É—Ç–∏ –ø–æ–∏—Å–∫–∞ –º–æ–¥—É–ª–µ–π (sys.path): {sys.path}")
    st.write(f"–¢–µ–∫—É—â–∞—è —Ä–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {os.getcwd()}")
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–∞–ø–∫–∏ modules –∏ –≤—ã–≤–æ–¥–∏–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    if 'modules' in os.listdir('.'):
         st.write("–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏ 'modules':", os.listdir('modules'))
    else:
        st.warning("–ü–∞–ø–∫–∞ 'modules' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏!")
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–π –±–∏–±–ª–∏–æ—Ç–µ–∫
    libs_to_check = [
        "streamlit", "pandas", "openai", "pydantic",
        "langchain", "langchain_core", "langchain_openai", "langchain_community",
        "sentence-transformers", "faiss-cpu"
    ]
    versions = {}
    for lib in libs_to_check:
        try:
            versions[lib] = importlib.metadata.version(lib)
        except importlib.metadata.PackageNotFoundError:
            versions[lib] = "–ù–ï –ù–ê–ô–î–ï–ù–ê!"
    st.write("–í–µ—Ä—Å–∏–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫:")
    st.json(versions)
    # –ü–æ–ø—ã—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞ –ø–∞—Ä—Å–µ—Ä–æ–≤
    st.write("–ü–æ–ø—ã—Ç–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ Output Parsers...")
    from langchain_core.output_parsers import PydanticOutputParser
    st.write("‚úÖ –£—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω PydanticOutputParser")
    try:
        from langchain_core.output_parsers import OutputFixingParser # –ü–æ–ø—ã—Ç–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
        st.write("‚úÖ –£—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω OutputFixingParser (—Ö–æ—Ç—è –æ–Ω –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω)")
    except ImportError as ie_fix:
        st.warning(f"‚ö†Ô∏è –û–∂–∏–¥–∞–µ–º–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ OutputFixingParser (—Ç.–∫. –æ–Ω –ø–µ—Ä–µ–º–µ—â–µ–Ω): {ie_fix}")

except Exception as diag_error:
    st.error(f"–û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: {diag_error}")
st.write("--- –ö–æ–Ω–µ—Ü –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ ---")
# --- –ö–û–ù–ï–¶ –ë–õ–û–ö–ê –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò ---


# --- –ò–º–ø–æ—Ä—Ç –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–æ–¥—É–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–ü–û–°–õ–ï –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏) ---
try:
    from modules.generator import generate_news, last_error # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ last_error
    from modules.models import NewsReport
    st.success("–ò–º–ø–æ—Ä—Ç modules.generator –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ.")
except ImportError as app_import_error:
    st.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ 'modules.generator': {app_import_error}")
    st.stop()
except Exception as app_other_error:
     st.error(f"–î—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ 'modules.generator': {app_other_error}")
     st.stop()


# --- –û—Å–Ω–æ–≤–Ω–æ–π UI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ---
st.title("üìú –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π –í–µ—Å—Ç–Ω–∏–∫–™ üì∞")
st.caption("–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø—Å–µ–≤–¥–æ-–∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –Ω–∞ –±–∞–∑–µ LLM")

# --- –í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ---
col1, col2 = st.columns([1, 2])

with col1:
    default_date = datetime.date(1789, 7, 14)
    selected_date = st.date_input(
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –¥–ª—è –≤—ã–ø—É—Å–∫–∞ –≥–∞–∑–µ—Ç—ã:",
        value=default_date,
        min_value=datetime.date(1000, 1, 1),
        max_value=datetime.date.today()
    )
    selected_date_str = selected_date.strftime("%d %B %Y")

    era_options = ["XVIII", "XIX", "XVII", "XX"]
    selected_era = st.selectbox("–°—Ç–∏–ª—å –∫–∞–∫–æ–≥–æ –≤–µ–∫–∞ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ?", era_options, index=0)
    num_articles = st.slider("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–≤–æ—Å—Ç–µ–π –≤ —Å–≤–æ–¥–∫–µ:", min_value=1, max_value=5, value=3)

    generate_button = st.button("‚ú® –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –í–µ—Å—Ç–Ω–∏–∫–™!")


# --- –û–±–ª–∞—Å—Ç—å –≤—ã–≤–æ–¥–∞ ---
with col2:
    st.subheader(f"–í—ã–ø—É—Å–∫—ä –æ—Ç—ä {selected_date_str} ({selected_era} –≤—£–∫—ä)")

    if generate_button:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ –∏–º–ø–æ—Ä—Ç generate_news —É—Å–ø–µ—à–Ω—ã–º —Ä–∞–Ω–µ–µ
        if 'generate_news' in globals():
            with st.spinner(f"‚è≥ –†–µ–¥–∞–∫—Ü—ñ—è '{'–•—Ä–æ–Ω–æ–≥—Ä–∞—Ñ—ä'.upper()}' –≥–æ—Ç–æ–≤–∏—Ç—ä —Å–≤—£–∂—ñ–π –Ω–æ–º–µ—Ä—ä..."):
                # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
                news_report: NewsReport = generate_news(
                    target_date=selected_date_str,
                    era_style=selected_era,
                    num_articles=num_articles
                )

                # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                if news_report and news_report.articles:
                    st.success("üì∞ –°–≤—£–∂—ñ–π –Ω–æ–º–µ—Ä—ä –≥–æ—Ç–æ–≤—ä!")
                    for i, article in enumerate(news_report.articles):
                        st.markdown(f"---")
                        st.markdown(f"### {i+1}. {article.headline}")
                        st.markdown(f"**–†—É–±—Ä–∏–∫–∞:** {article.rubric}")
                        st.markdown(f"*{article.date_location}*")
                        st.write(article.body)
                        st.caption(f"–†–µ–ø–æ—Ä—Ç–∞–∂—ä –≤–µ–ª—ä: {article.reporter}")
                # –°–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –Ω–µ—Ç –Ω–æ–≤–æ—Å—Ç–µ–π, –Ω–æ –∏ –Ω–µ –±—ã–ª–æ –æ—à–∏–±–∫–∏ (–∏–∑ generate_news)
                elif last_error is None: # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é last_error
                     st.info("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ (–≤–æ–∑–º–æ–∂–Ω–æ, –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ —Å–æ–±—ã—Ç–∏–π).")
                # –°–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö (st.error / st.warning) –≤—ã–≤–æ–¥—è—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ generate_news

        else:
             st.error("–û—à–∏–±–∫–∞: —Ñ—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π –Ω–µ –±—ã–ª–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏–∑-–∑–∞ –ø—Ä–æ–±–ª–µ–º —Å –∏–º–ø–æ—Ä—Ç–æ–º.")

    else:
        st.info("–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π.")


# --- –ü–æ–¥–≤–∞–ª ---
st.markdown("---")
st.caption("–°–æ–∑–¥–∞–Ω–æ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º LLM –∏ Streamlit.")